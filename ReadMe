Leaning Content:-

    01. Load images on the html page
        <Details:->
            * '<img>' tag is a void element( it meant no need the closing tag. like link tag)
            * If we are changing the width of the img, height also change automatically.
            * 'object-fit' is a dedicated css feature for image
            * 'object-position' is a dedicated css feature for image position on the web site

    02. Create 'Search bar'
        <Details>
            * '<input>' tag is also a voide element like '<img>'
            * '<input>' tag having several types like 
                    - type = 'text'
                    - type = 'checkbox'
            * If the textbox or search bar, there having some text until you written something. It's called as placeholder.

    03. HTML element types
        <Details>
            There are three type of elements
                1. Block type element
                2. Inline-block element
                3. Inline element
        </Details:->

    04. If you need to aggest lines space
        <Details>
            line-height: 12px;
        </Details>

    05. Horizontal and Veritical words alinment, we can use
        - display: flex;
          justify-content:center; -> this is for horizontal alientment
          align-item:center; -> this is for verifical center

    06. If you need to align text below to image    
        - display: flex;
          flex-direction: column;

    07. If you need to align text parallel with a image
        - display: flex;
          flex-direction: row;

    08. If you need to add a tool tip
        - opacity: 0; -> invisible mode
        then create second class on css file and make this 0 to 1 in it
        - opacity: 1;
        if you need to add more smooth transition on it. you can add
        - transition: opacity 0.15s;

    CSS Positioning:

    * top: 10px; bottom:100px; => through this create a rectagle with flex.
    * left:50px; right:50px   => same as above

    CSS Reponsive Design:
        - Use @media tag for the responsive design. through that able to arrange 2, 3, 4 and more content
          on the screen
    
    CSS Padding: 
        - If there are left, right, bottom and top padding with same size(like 4px), you can use
        ```
        padding: 4px;
        ```

        - If you need to define main two sizes in a same row
        ```
        padding: <vertical -  top/bottom> <horizontal - left/right>
        ```

        - If you need to define main four sizes in a same row
        ```
        padding: <top> <right> <bottom> <left>
        ```

    CSS Margin:
        - If there are left, right, bottom and top margin with same size(like 4px), you can use
        ```
        margin: 4px;
        ```

        - If you need to define main two sizes in a same row
        ```
        margin: <vertical -  top/bottom> <horizontal - left/right>
        ```

        - If you need to define main four sizes in a same row
        ```
        margin: <top> <right> <bottom> <left>
        ```

    CSS border:
        - border-width: 1px;
          border-style: solid;
          border-color: rgb(192, 192, 192); we can write this as follows for short hand

          ```
           border: 1px sold rgb(192, 192, 192);
          ```

    Inheritance :-
        This is mostly work with the text properties and if this is define in a parent div, it'll effected to the below child div

        ```
        text-decoration: underline;
        ```

    CSS Specificity:
    ```
        body {
            color: black;
        }

        .video-content{
            color: gray; 
        }
    ```
        This is called css specificity, because body defined font color override by video-content class

    Semengic Element of html:-
        <header>, <nav>, <main>, <section>
        this all work as div but it have meaning to the screen readers
        
** Best practise is creating main things in a different css file
    eg:- page header
         sidebar
         content
